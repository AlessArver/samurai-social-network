{"version":3,"sources":["components/common/Forms/forms.module.css","utils/validators.js","components/common/Forms/Forms.jsx","hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/Dialog/Dialog.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/Dialog/Dialog.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","required","value","undefined","maxLength","max","length","minLength","min","Form","input","meta","touched","error","el","props","showError","className","cn","s","React","createElement","Textarea","Input","createField","name","placeholder","validators","component","text","validate","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","connect","Dialog","id","activeClassName","src","Message","MessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","Dialogs","dialogs","map","d","key","messages","m","formData","addMessage","message","compose","dialogsPage","newMessageText"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,KAAO,oBAAoB,MAAQ,qBAAqB,UAAY,2B,iCCDtF,sGAAO,IAAMC,EAAW,SAAAC,GAAK,OAAIA,OAAQC,EAAY,qBAExCC,EAAY,SAAAC,GAAG,OAAI,SAAAH,GAAK,OACjCA,GAASA,EAAMI,OAASD,EAAxB,0BAAiDA,QAAQF,IAEhDI,EAAY,SAAAC,GAAG,OAAI,SAAAN,GAAK,OACjCA,GAASA,EAAMI,OAASE,EAAxB,0BAAiDA,QAAQL,K,uNCDvDM,EAAO,SAAC,GAAmD,IAAlDC,EAAiD,EAAjDA,MAAiD,IAA1CC,KAAOC,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,MAAQC,EAAkB,EAAlBA,GAAOC,EAAW,qCACtDC,EAAYJ,GAAWC,EAE7B,OACI,yBAAKI,UAAWC,IAAGC,OAAD,eAAWA,QAAUH,KAClCI,IAAMC,cAAcP,EAApB,2BAA4BJ,GAAUK,IACtCC,GAAa,+BAAQH,KAKrBS,EAAW,SAAAP,GAAK,OAAI,kBAACN,EAAD,iBAAUM,EAAV,CAAiBD,GAAG,eACxCS,EAAQ,SAAAR,GAAK,OAAI,kBAACN,EAAD,iBAAUM,EAAV,CAAiBD,GAAG,YAErCU,EAAc,SAACC,EAAMC,EAAaC,EAAYC,GAAhC,IAA2Cb,EAA3C,uDAAmD,GAAIc,EAAvD,uDAA8D,GAA9D,OACvB,oCACI,kBAAC,IAAD,eACIJ,KAAMA,EACNC,YAAaA,EACbI,SAAUH,EACVC,UAAWA,GACPb,IANZ,IAOQc,K,sICvBNE,EAA6B,SAAAC,GAAK,MAAK,CACzCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAAAC,GAAc,IACpCC,EADmC,uKAGjC,OAAKC,KAAKvB,MAAMkB,OACT,kBAACG,EAAcE,KAAKvB,OADI,kBAAC,IAAD,CAAUwB,GAAG,eAHX,GACTnB,IAAMgB,WAOtC,OAAOI,YAAQT,EAARS,CAAoCH,K,oBCf/CtC,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,SAAW,4B,oBCA7GD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,OAAS,uBAAuB,iBAAiB,+BAA+B,KAAO,uB,oBCAzID,EAAOC,QAAU,CAAC,eAAiB,gCAAgC,QAAU,yBAAyB,SAAW,4B,wICalGyC,EAVA,SAAA1B,GACX,OACQ,kBAAC,IAAD,CAASwB,GAAE,mBAAcxB,EAAM2B,IAAMzB,UAAWE,SAAUwB,gBAAiBxB,UACvE,yBAAKF,UAAU,kBACX,yBAAK2B,IAAI,wDAAwD3B,UAAU,YAE/E,yBAAKA,UAAWE,QAASJ,EAAMU,Q,SCAhCoB,EAPC,SAAA9B,GACZ,OACI,yBAAKE,UAAWE,kBACZ,yBAAKF,UAAWE,WAAYJ,EAAMc,Q,SCexCiB,EAAmBC,YAAU,CAACC,KAAM,WAAjBD,EAZL,SAAAhC,GAAK,OACrB,0BAAMkC,SAAUlC,EAAMmC,cAClB,kBAACC,EAAA,EAAD,CACI1B,KAAK,UACLC,YAAY,aACZI,SAAU,CAAC7B,KACX2B,UAAWN,MAEf,4CA0BO8B,EApBC,SAAArC,GACZ,IAIIsC,EAAUtC,EAAMsC,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAQC,IAAKD,EAAEb,GAAIjB,KAAM8B,EAAE9B,UAC5DgC,EAAW1C,EAAM0C,SAASH,KAAI,SAAAI,GAAC,OAAI,kBAAC,EAAD,CAASF,IAAKE,EAAEhB,GAAIb,KAAM6B,EAAE7B,UAEnE,OAAKd,EAAMkB,OAGP,yBAAKhB,UAAWE,WACZ,yBAAKF,UAAWE,gBAAiBkC,GACjC,yBAAKpC,UAAWE,YACZ,yBAAKF,UAAWE,mBAAoBsC,GACpC,kBAACX,EAAD,CAAkBG,SAdb,SAACU,GACd5C,EAAM6C,WAAWD,EAASE,cAMJ,kBAAC,IAAD,CAAUtB,GAAG,Y,iBClB5BuB,sBACXtB,aAPoB,SAAAR,GAAK,MAAK,CAC9BqB,QAASrB,EAAM+B,YAAYV,QAC3BI,SAAUzB,EAAM+B,YAAYN,SAC5BO,eAAgBhC,EAAM+B,YAAYC,kBAIT,CAACJ,iBAC1BzB,IAFW2B,CAGbV","file":"static/js/5.53fbfedd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"forms_form__tHqmU\",\"error\":\"forms_error__2xJFm\",\"formError\":\"forms_formError__3e95j\"};","export const required = value => value ? undefined : 'Field is required'\r\n\r\nexport const maxLength = max => value =>\r\n    value && value.length > max ? `Max characters: ${max}` : undefined\r\n\r\nexport const minLength = min => value =>\r\n    value && value.length < min ? `Min characters: ${min}` : undefined","import React from 'react'\r\nimport * as s from './forms.module.css'\r\nimport {Field} from 'redux-form';\r\nimport cn from 'classnames'\r\n\r\nconst Form = ({input, meta: {touched, error}, el, ...props}) => {\r\n    const showError = touched && error\r\n\r\n    return (\r\n        <div className={cn(s.form, {[s.error]: showError})}>\r\n            {React.createElement(el, {...input, ...props})}\r\n            {showError && <small>{error}</small>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = props => <Form {...props} el='textarea'/>\r\nexport const Input = props => <Form {...props} el='input'/>\r\n\r\nexport const createField = (name, placeholder, validators, component, props = {}, text = '') => (\r\n    <>\r\n        <Field\r\n            name={name}\r\n            placeholder={placeholder}\r\n            validate={validators}\r\n            component={component}\r\n            {...props}\r\n        /> {text}\r\n    </>\r\n)","import {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToPropsForRedirect = state => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = Component => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to=\"/login\"/>\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2gUxy\",\"dialogsItems\":\"Dialogs_dialogsItems__3g68G\",\"messages\":\"Dialogs_messages__1wxUZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__2mO_T\",\"active\":\"Dialog_active__3i21K\",\"avatar-wrapper\":\"Dialog_avatar-wrapper__lWjxV\",\"text\":\"Dialog_text__1x27a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageWrapper\":\"Message_messageWrapper__2x62e\",\"message\":\"Message_message__3HPgv\",\"unreaded\":\"Message_unreaded__3fPvv\"};","import {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport * as s from \"./Dialog.module.css\";\r\n\r\nconst Dialog = props => {\r\n    return (\r\n            <NavLink to={`/dialogs/${props.id}`} className={s.dialog} activeClassName={s.active}>\r\n                <div className=\"avatar-wrapper\">\r\n                    <img src=\"https://data.whicdn.com/images/331901362/original.jpg\" className=\"avatar\" />\r\n                </div>\r\n                <div className={s.text}>{props.name}</div>\r\n            </NavLink>\r\n    )\r\n}\r\nexport default Dialog","import React from \"react\";\r\nimport * as s from \"./Message.module.css\"\r\n\r\nconst Message = props => {\r\n    return (\r\n        <div className={s.messageWrapper}>\r\n            <div className={s.message}>{props.text}</div>\r\n        </div>\r\n    )\r\n}\r\nexport default Message","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport * as s from \"./Dialogs.module.css\"\r\nimport {required} from \"../../utils/validators\";\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport Message from \"./Message/Message\";\r\nimport {Textarea} from \"../common/Forms/Forms\";\r\n\r\nconst MessageForm = props => (\r\n    <form onSubmit={props.handleSubmit}>\r\n        <Field\r\n            name=\"message\"\r\n            placeholder=\"Your minds\"\r\n            validate={[required]}\r\n            component={Textarea}\r\n        />\r\n        <button>Send</button>\r\n    </form>\r\n)\r\n\r\nconst MessageReduxForm = reduxForm({form: \"dialogs\"})(MessageForm)\r\n\r\nconst Dialogs = props => {\r\n    const onSubmit = (formData) => {\r\n        props.addMessage(formData.message)\r\n    }\r\n\r\n    let dialogs = props.dialogs.map(d => <Dialog key={d.id} name={d.name}/>)\r\n    let messages = props.messages.map(m => <Message key={m.id} text={m.text}/>)\r\n\r\n    if (!props.isAuth) return <Redirect to=\"/login\"/>\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>{dialogs}</div>\r\n            <div className={s.messages}>\r\n                <div className={s.messagesWrapper}>{messages}</div>\r\n                <MessageReduxForm onSubmit={onSubmit}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Dialogs\r\n\r\n","import {connect} from \"react-redux\";\r\nimport {addMessage} from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport React from \"react\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nconst mapStateToProps = state => ({\r\n    dialogs: state.dialogsPage.dialogs,\r\n    messages: state.dialogsPage.messages,\r\n    newMessageText: state.dialogsPage.newMessageText\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {addMessage}),\r\n    withAuthRedirect\r\n)(Dialogs)"],"sourceRoot":""}