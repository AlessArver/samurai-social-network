{"version":3,"sources":["utils/validators.js","components/common/Forms/forms.module.css","components/common/Forms/Forms.jsx","hoc/withAuthRedirect.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Posts/Posts.module.css","components/Profile/Posts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm/ProfileDataFormm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Posts/Post/Post.jsx","components/Profile/Posts/Posts.jsx","components/Profile/Posts/PostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["required","value","undefined","maxLength","max","length","minLength","min","module","exports","Form","input","meta","touched","error","el","props","showError","className","cn","s","React","createElement","Textarea","Input","createField","name","placeholder","validators","component","text","validate","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","connect","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","onDoubleClick","ProfileDataFormRedux","reduxForm","form","handleSubmit","profile","onSubmit","type","keys","contacts","map","c","key","formError","Contact","title","href","target","ProfileData","isOwner","onAvatarSelected","activateEdit","descriptionBlock","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","ProfileInfo","saveProfile","edit","setEdit","files","saveAvatar","bigImageWrapper","src","photos","large","alt","small","smallImage","buttonsGroup","onClick","buttonGroupItem","initialValues","data","then","Post","likesCount","maxLengthPost","PostReduxForm","Field","Posts","memo","posts","p","id","reverse","formData","addPost","post","PostsContainer","profilePage","Profile","ProfileContainer","match","params","userId","history","getProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","withRouter"],"mappings":"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","file":"static/js/4.f05ec03f.chunk.js","sourcesContent":["export const required = value => value ? undefined : 'Field is required'\r\n\r\nexport const maxLength = max => value =>\r\n    value && value.length > max ? `Max characters: ${max}` : undefined\r\n\r\nexport const minLength = min => value =>\r\n    value && value.length < min ? `Min characters: ${min}` : undefined","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"forms_form__tHqmU\",\"error\":\"forms_error__2xJFm\",\"formError\":\"forms_formError__3e95j\"};","import React from 'react'\r\nimport * as s from './forms.module.css'\r\nimport {Field} from 'redux-form';\r\nimport cn from 'classnames'\r\n\r\nconst Form = ({input, meta: {touched, error}, el, ...props}) => {\r\n    const showError = touched && error\r\n\r\n    return (\r\n        <div className={cn(s.form, {[s.error]: showError})}>\r\n            {React.createElement(el, {...input, ...props})}\r\n            {showError && <small>{error}</small>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = props => <Form {...props} el='textarea'/>\r\nexport const Input = props => <Form {...props} el='input'/>\r\n\r\nexport const createField = (name, placeholder, validators, component, props = {}, text = '') => (\r\n    <>\r\n        <Field\r\n            name={name}\r\n            placeholder={placeholder}\r\n            validate={validators}\r\n            component={component}\r\n            {...props}\r\n        /> {text}\r\n    </>\r\n)","import {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToPropsForRedirect = state => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = Component => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to=\"/login\"/>\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n}\r\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bigImageWrapper\":\"ProfileInfo_bigImageWrapper__3TAxq\",\"smallImage\":\"ProfileInfo_smallImage__3VggN\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2kh2A\",\"buttonsGroup\":\"ProfileInfo_buttonsGroup__mEHnD\",\"buttonGroupItem\":\"ProfileInfo_buttonGroupItem__1WWeG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPost\":\"Posts_newPost___GXBB\",\"posts\":\"Posts_posts__jtVvg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPost\":\"Post_newPost__mNv8s\",\"post\":\"Post_post__3Tosk\",\"avatarWrapper\":\"Post_avatarWrapper__MOuM1\",\"postText\":\"Post_postText__2iDx6\",\"buttons\":\"Post_buttons__2PX-B\"};","import React, {useEffect, useState} from 'react'\r\nimport * as s from './ProfileStatus.module.css'\r\nimport {maxLength} from '../../../../utils/validators'\r\n\r\nconst maxLengthStatus = maxLength(300)\r\n\r\nconst ProfileStatusWithHooks = props => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => setStatus(props.status), [props.status])\r\n\r\n    const activateEditMode = () => setEditMode(true)\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = e => setStatus(e.currentTarget.value)\r\n\r\n    return (\r\n        <>\r\n            Status:\r\n            {!editMode\r\n                ? <div>\r\n                    <span onDoubleClick={activateEditMode}>\r\n                         {props.status || 'No status'}\r\n                    </span>\r\n                </div>\r\n                : <input\r\n                    onChange={onStatusChange}\r\n                    autoFocus={true}\r\n                    onBlur={deactivateEditMode}\r\n                    value={status}\r\n                />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks","import React from 'react'\r\nimport {createField, Input, Textarea} from '../../../common/Forms/Forms'\r\nimport {required} from '../../../../utils/validators'\r\nimport {reduxForm} from 'redux-form'\r\nimport s from '../../../common/Forms/forms.module.css'\r\n\r\nconst Contact = ({title, value}) => (\r\n    <li>\r\n        <a href={value}>{title}</a>\r\n    </li>\r\n)\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => (\r\n    <form onSubmit={handleSubmit}>\r\n        <button>Save</button>\r\n        {createField('fullName', 'Full Name', [], Input)}\r\n        {createField(\r\n            'lookingForAJob',\r\n            null,\r\n            [],\r\n            Input,\r\n            {type: 'checkbox'},\r\n            'Looking for a job')}\r\n        {createField('aboutMe', 'About me', [], Textarea)}\r\n        {createField('lookingForAJobDescription', 'My professional skills', [], Textarea)}\r\n        <div>Contacts:</div>\r\n        {Object\r\n            .keys(profile.contacts)\r\n            .map(c => <div key={c}>{createField(`contacts.${c}`, c, [], Input)}</div>)}\r\n        {error && <div className={s.formError}>{error}</div>}\r\n    </form>\r\n)\r\n\r\nconst ProfileDataFormRedux = reduxForm({form: 'profileDataForm'})(ProfileDataForm)\r\nexport default ProfileDataFormRedux","import React, {useState} from 'react'\r\nimport s from './ProfileInfo.module.css'\r\nimport Preloader from '../../common/Preloader/Preloder'\r\n//import ProfileStatus from \"./ProfileStatus/ProfileStatus\"\r\nimport ProfileStatusWithHooks from './ProfileStatus/ProfileStatusWithHooks'\r\nimport ProfileDataForm from './ProfileDataForm/ProfileDataFormm'\r\n\r\nconst Contact = ({title, value}) => (\r\n    <li>\r\n        <a href={value} target='_blank'>{title}</a>\r\n    </li>\r\n)\r\n\r\nconst ProfileData = ({profile, isOwner, onAvatarSelected, activateEdit}) => (\r\n    <div className={s.descriptionBlock}>\r\n        <ul>\r\n            {Object\r\n                .keys(profile.contacts)\r\n                .map(c => <Contact title={c} value={profile.contacts[c]} key={c}/>)}\r\n        </ul>\r\n        <div>\r\n            <div>\r\n                <div>{profile.fullName}</div>\r\n            </div>\r\n            <div>\r\n                <div>About me: {profile.aboutMe || '-'}</div>\r\n            </div>\r\n            <div>\r\n                <div>Looking for a job: {profile.lookingForAJob ? 'yes' : 'no'}</div>\r\n            </div>\r\n            <div>\r\n                <div>My professional skills: {profile.lookingForAJobDescription || '-'}</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n)\r\n\r\n\r\nconst ProfileInfo = ({profile, isOwner, status, updateStatus, saveProfile, ...props}) => {\r\n    const [edit, setEdit] = useState(false)\r\n    if (!profile) return <Preloader/>\r\n\r\n    const onAvatarSelected = e => {\r\n        if (e.target.files.length)\r\n            props.saveAvatar(e.target.files[0])\r\n    }\r\n\r\n    const onSubmit = data => saveProfile(data).then(() => setEdit(false))\r\n\r\n    return (\r\n        <>\r\n            <div className={s.bigImageWrapper}>\r\n                <img src={\r\n                    profile.photos.large\r\n                    || 'https://cdn2.hubspot.net/hubfs/2221797/cumulus2.jpg'\r\n                } alt=\"big image\"/>\r\n            </div>\r\n            <img src={\r\n                profile.photos.small\r\n                || 'https://data.whicdn.com/images/331901362/original.jpg'\r\n            } className={s.smallImage}/>\r\n            <div className={s.buttonsGroup}>\r\n                {isOwner && <button onClick={() => setEdit(true)} className={s.buttonGroupItem}>Edit</button>}\r\n                {isOwner && <input type='file' onChange={onAvatarSelected} className={s.buttonGroupItem}/>}\r\n            </div>\r\n            {!edit\r\n                ? <ProfileData profile={profile} isOwner={isOwner} onAvatarSelected={onAvatarSelected}/>\r\n                : <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n            }\r\n            <ProfileStatusWithHooks\r\n                status={status}\r\n                updateStatus={updateStatus}\r\n            />\r\n        </>\r\n    )\r\n}\r\nexport default ProfileInfo","import React from \"react\"\r\nimport * as s from \"./Post.module.css\"\r\n\r\nconst Post = (props) => (\r\n    <>\r\n        <div className={s.post}>\r\n            <div className=\"avatar-wrapper\">\r\n                <img src=\"https://data.whicdn.com/images/331901362/original.jpg\" />\r\n            </div>\r\n            <p className={s.postText}>{props.text}</p>\r\n            <div className={s.buttons}>\r\n                <div>like <span>{props.likesCount}</span></div>\r\n            </div>\r\n        </div>\r\n    </>\r\n)\r\nexport default Post","import React from \"react\"\r\nimport * as s from \"./Posts.module.css\"\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLength, required} from \"../../../utils/validators\";\r\nimport Post from \"./Post/Post\";\r\nimport {Textarea} from \"../../common/Forms/Forms\";\r\n\r\nconst maxLengthPost = maxLength(250)\r\n\r\nconst PostForm = props => (\r\n    <form onSubmit={props.handleSubmit}>\r\n        <Field\r\n            name=\"post\"\r\n            className={s.newPost}\r\n            placeholder=\"Your minds\"\r\n            validate={[required, maxLengthPost]}\r\n            component={Textarea}\r\n        />\r\n        <button>Submit</button>\r\n    </form>\r\n)\r\n\r\nconst PostReduxForm = reduxForm({form: \"profilePost\"})(PostForm)\r\n\r\nconst Posts = React.memo(props => {\r\n    const onSubmit = (formData) => {\r\n        props.addPost(formData.post)\r\n    }\r\n\r\n    let posts = [...props.posts]\r\n        .map(p => (<Post\r\n                text={p.text}\r\n                likesCount={p.likesCount}\r\n                key={p.id}/>\r\n        ))\r\n        .reverse()\r\n\r\n    return (\r\n        <>\r\n            <PostReduxForm onSubmit={onSubmit}/>\r\n            <div className={s.posts}>\r\n                {posts}\r\n            </div>\r\n        </>\r\n    )\r\n});\r\nexport default Posts","import {connect} from \"react-redux\";\r\nimport {addPost} from \"../../../redux/profileReducer\";\r\nimport Posts from \"./Posts\";\r\n\r\nconst mapStateToProps = state => ({\r\n    posts: state.profilePage.posts\r\n})\r\n\r\nconst PostsContainer = connect(mapStateToProps, {addPost})(Posts)\r\nexport default PostsContainer","import React from 'react'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\nimport PostsContainer from './Posts/PostsContainer'\r\n\r\nconst Profile = props => {\r\n    return <>\r\n        <ProfileInfo\r\n            isOwner={props.isOwner}\r\n            profile={props.profile}\r\n            saveAvatar={props.saveAvatar}\r\n            status={props.status}\r\n            updateStatus={props.updateStatus}\r\n            saveProfile={props.saveProfile}\r\n        />\r\n        <PostsContainer/>\r\n    </>\r\n}\r\nexport default Profile","import React from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {getProfile, getStatus, saveAvatar, updateStatus, saveProfile} from '../../redux/profileReducer'\r\nimport Profile from './Profile'\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect'\r\nimport {compose} from 'redux'\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let id = this.props.match.params.id\r\n        if (!id && this.props.isAuth) id = this.props.userId\r\n        if (!id && !this.props.isAuth) this.props.history.push('/login')\r\n        this.props.getProfile(id)\r\n        this.props.getStatus(id)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.id !== prevProps.match.params.id)\r\n            this.refreshProfile()\r\n    }\r\n\r\n    render() {\r\n        return <Profile\r\n            {...this.props}\r\n            isOwner={!this.props.match.params.id}\r\n            profile={this.props.profile}\r\n            status={this.props.status}\r\n            updateStatus={this.props.updateStatus}\r\n            saveAvatar={this.props.saveAvatar}\r\n        />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    userId: state.auth.id,\r\n    isAuth: state.auth.isAuth,\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        getProfile,\r\n        getStatus,\r\n        updateStatus,\r\n        saveAvatar,\r\n        saveProfile\r\n    }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)"],"sourceRoot":""}