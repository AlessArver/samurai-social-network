{"version":3,"sources":["serviceWorker.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Nav/Nav.jsx","redux/appReducer.js","redux/index.js","App.js","index.js","redux/authReducer.js","components/Nav/Nav.module.css","components/common/Preloader/Preloder.jsx","redux/profileReducer.js","api/api.js","redux/dialogsReducer.js","redux/usersReducer.js","components/Header/Header.module.css","assets/images/preloader.svg"],"names":["Boolean","window","location","hostname","match","Header","props","className","s","header","to","isAuth","onClick","logout","connect","state","auth","login","Nav","activeClassName","active","initialState","initialized","appReducer","action","type","reducers","combineReducers","app","profilePage","profileReducer","dialogsPage","dialogsReducer","usersPage","usersReducer","authReducer","form","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","_store","DialogsContainer","lazy","ProfileContainer","UsersContainer","Login","App","this","initializeApp","fallback","exact","path","render","React","Component","AppContainer","dispatch","getAuthUser","then","withRouter","MainApp","StrictMode","basename","process","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","SET_USER_DATA","id","email","isFetching","captchaUrl","data","url","setAuthUserData","a","authApi","me","resultCode","password","rememberMe","captcha","getCaptchaUrl","messages","length","stopSubmit","_error","securityApi","module","exports","Preloader","src","preloder","alt","posts","text","likesCount","profile","status","filter","p","photos","addPost","setStatus","getProfile","userApi","getUser","getStatus","profileApi","updateStatus","alert","saveAvatar","file","saveProfile","getState","Promise","reject","instance","axios","create","baseURL","withCredentials","headers","getUsers","currentPage","pageSize","get","res","warn","follow","post","unfollow","delete","put","formData","FormData","append","dialogs","name","m","addMessage","users","totalUsersCount","followingInProgress","map","u","followed","setCurrentPage","toggleIsFollowSuccess","toggleIsFetching","toggleIsFollowingInProgress","requestUsers","page","items","totalCount","followUnfollowFlow","apiMethod","bind"],"mappings":"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","file":"static/js/main.6bcbe92a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport s from './Header.module.css'\r\n\r\nconst Header = props => (\r\n    <header className={s.header}>\r\n        <NavLink to='/'>Logo</NavLink>\r\n        {props.isAuth\r\n            ? <NavLink to='/logout'>\r\n                <button onClick={props.logout}>Logout</button>\r\n            </NavLink>\r\n            : <NavLink to='/login'>Login</NavLink>\r\n        }\r\n    </header>\r\n)\r\nexport default Header","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {logout} from '../../redux/authReducer'\r\nimport Header from './Header'\r\n\r\nconst HeaderContainer = props => <Header {...props} />\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer)","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport s from './Nav.module.css'\r\n\r\nconst Nav = () => (\r\n    <nav>\r\n        <div>\r\n            <NavLink to='/profile' activeClassName={s.active}>Profile</NavLink>\r\n        </div>\r\n        <div>\r\n            <NavLink to='/dialogs' activeClassName={s.active}>Dialogs</NavLink>\r\n        </div>\r\n        <div>\r\n            <NavLink to='/users' activeClassName={s.active}>Users</NavLink>\r\n        </div>\r\n        <div>\r\n            <NavLink to='/news' activeClassName={s.active}>News</NavLink>\r\n        </div>\r\n        <div>\r\n            <NavLink to='/music' activeClassName={s.active}>Music</NavLink>\r\n        </div>\r\n    </nav>\r\n)\r\nexport default Nav","import {getAuthUser} from \"./authReducer\";\r\n\r\nconst INITIALIZED_SUCCESS = \"INITIALIZED-SUCCESS\"\r\n\r\nconst initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default appReducer\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS})\r\n\r\nexport const initializeApp = () => dispatch => {\r\n    dispatch(getAuthUser())\r\n        .then(() => dispatch(initializedSuccess()))\r\n}","import {applyMiddleware, combineReducers, compose, createStore} from 'redux';\r\nimport profileReducer from './profileReducer';\r\nimport dialogsReducer from './dialogsReducer';\r\nimport usersReducer from './usersReducer';\r\nimport authReducer from './authReducer';\r\nimport thunk from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport appReducer from './appReducer';\r\n\r\nconst reducers = combineReducers({\r\n    app: appReducer,\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)))\r\nwindow._store = store\r\n\r\nexport default store","import React, {Suspense, lazy} from 'react'\nimport {BrowserRouter, Redirect, Route, Switch, withRouter} from 'react-router-dom'\nimport './App.css'\nimport HeaderContainer from './components/Header/HeaderContainer'\nimport Nav from './components/Nav/Nav'\nimport {connect, Provider} from 'react-redux'\nimport {compose} from 'redux'\nimport {initializeApp} from './redux/appReducer'\nimport Preloader from './components/common/Preloader/Preloder'\nimport store from './redux'\n\nconst DialogsContainer = lazy(() => import('./components/Dialogs/DialogsContainer'))\nconst ProfileContainer = lazy(() => import('./components/Profile/ProfileContainer'))\nconst UsersContainer = lazy(() => import('./components/Users/UsersContainer'))\nconst Login = lazy(() => import('./components/Login/Login'))\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp()\n    }\n\n    render() {\n        if (this.props.initialized)\n            return (\n                <div className='app-wrapper'>\n                    <HeaderContainer/>\n                    <Nav/>\n                    <div className='app-wrapper-content'>\n                        <Suspense fallback={<Preloader/>}>\n                            <Switch>\n                                <Route exact path='/' render={() => <Redirect to='/profile'/>}/>\n                                <Route path='/profile/:id?' render={() => <ProfileContainer/>}/>\n                                <Route path='/dialogs' render={() => <DialogsContainer/>}/>\n                                <Route path='/users' render={() => <UsersContainer/>}/>\n                                <Route path='/login' render={() => <Login/>}/>\n                                <Route path='*' render={() => <div>404 Not Found</div>}/>\n                            </Switch>\n                        </Suspense>\n\n                    </div>\n                </div>\n            )\n        else return <Preloader/>\n    }\n}\n\nconst mapStateToProps = state => ({initialized: state.app.initialized})\n\nconst AppContainer = compose(\n    connect(mapStateToProps, {initializeApp}),\n    withRouter\n)(App)\n\nconst MainApp = () => (\n    <React.StrictMode>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <Provider store={store}>\n                <AppContainer/>\n            </Provider>\n        </BrowserRouter>\n    </React.StrictMode>\n)\nexport default MainApp","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport * as serviceWorker from './serviceWorker'\nimport MainApp from './App'\n\nReactDOM.render(<MainApp/>, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()","import {authApi, securityApi} from '../api/api'\r\nimport {stopSubmit} from 'redux-form'\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET-USER-DATA'\r\nconst SET_CAPTCHA_URL_SUCCESS = 'samurai-network/auth/SET-CAPTCHA_URL_SUCCESS'\r\n\r\nconst initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isFetching: false,\r\n    isAuth: false,\r\n    captchaUrl: null\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        case SET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                captchaUrl: action.url\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default authReducer\r\n\r\nexport const setAuthUserData = (id, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    data: {id, email, login, isAuth}\r\n})\r\nexport const getCaptchaUrlSuccess = url => ({type: SET_CAPTCHA_URL_SUCCESS, url})\r\n\r\nexport const getAuthUser = () => async dispatch => {\r\n    const data = await authApi.me()\r\n    if (!data.resultCode) {\r\n        let {id, email, login} = data.data\r\n        dispatch(setAuthUserData(id, email, login, true))\r\n    }\r\n}\r\nexport const login = (email, password, rememberMe, captcha) => async dispatch => {\r\n    const data = await authApi.login(email, password, rememberMe, captcha)\r\n    if (!data.resultCode) dispatch(getAuthUser())\r\n    else {\r\n        if (data.resultCode === 10) dispatch(getCaptchaUrl())\r\n        let message = data.messages.length > 0 ? data.messages[0] : 'Some error'\r\n        dispatch(stopSubmit('login', {_error: message}))\r\n    }\r\n}\r\nexport const getCaptchaUrl = () => async dispatch => {\r\n    const data = await securityApi.getCaptchaUrl()\r\n    const captchaUrl = data.url\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl))\r\n}\r\nexport const logout = () => async dispatch => {\r\n    const data = await authApi.logout()\r\n    if (!data.resultCode)\r\n        dispatch(setAuthUserData(\r\n            null,\r\n            null,\r\n            null,\r\n            false\r\n        ))\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"active\":\"Nav_active__1-Ghp\"};","import React from \"react\";\r\nimport preloder from \"../../../assets/images/preloader.svg\";\r\n\r\nconst Preloader = () => <img src={preloder} alt=\"preloder\"/>\r\nexport default Preloader","import {profileApi, userApi} from '../api/api'\r\nimport {stopSubmit} from 'redux-form'\r\n\r\nconst SET_PROFILE = 'SET-PROFILE'\r\nconst ADD_POST = 'ADD-POST'\r\nconst DELETE_POST = 'DELETE-POST'\r\nconst SET_STATUS = 'SET-STATUS'\r\nconst UPDATE_NEW_STATUS_TEXT = 'UPDATE-NEW-STATUS-TEXT'\r\nconst SAVE_AVATAR_SUCCESS = 'SAVE-AVATAR-SUCCESS'\r\n\r\nconst initialState = {\r\n    posts: [\r\n        {\r\n            id: 1,\r\n            text: 'My first post',\r\n            likesCount: 100\r\n        },\r\n        {\r\n            id: 2,\r\n            text: 'My second post',\r\n            likesCount: 45634\r\n        }\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_PROFILE:\r\n            return {...state, profile: action.profile}\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts: [\r\n                    ...state.posts,\r\n                    {id: 3, text: action.text, likesCount: 0}\r\n                ]\r\n            }\r\n        case DELETE_POST:\r\n            return {...state, posts: state.posts.filter(p => p.id !== action.id)}\r\n        case SAVE_AVATAR_SUCCESS:\r\n            return {...state, profile: {...state.profile, photos: action.photos}}\r\n        case SET_STATUS:\r\n            return {...state, status: action.status}\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default profileReducer\r\n\r\nexport const setProfile = profile => ({type: SET_PROFILE, profile})\r\nexport let addPost = text => ({type: ADD_POST, text})\r\nexport let deletePost = id => ({type: DELETE_POST, id})\r\nexport let saveAvatarSuccess = photos => ({type: SAVE_AVATAR_SUCCESS, photos})\r\n\r\nexport const setStatus = status => ({type: SET_STATUS, status})\r\n\r\nexport const getProfile = id => async dispatch => {\r\n    const data = await userApi.getUser(id)\r\n    dispatch(setProfile(data))\r\n}\r\nexport const getStatus = id => async dispatch => {\r\n    const data = await profileApi.getStatus(id)\r\n    dispatch(setStatus(data))\r\n}\r\nexport const updateStatus = status => async dispatch => {\r\n    try {\r\n        const data = await profileApi.updateStatus(status)\r\n        if (!data.resultCode) dispatch(setStatus(status))\r\n    } catch (e) {\r\n        alert('ERROR')\r\n    }\r\n}\r\n\r\nexport const saveAvatar = file => async dispatch => {\r\n    const data = await profileApi.saveAvatar(file)\r\n    if (!data.resultCode) dispatch(saveAvatarSuccess(data.photos))\r\n}\r\n\r\nexport const saveProfile = profile => async (dispatch, getState) => {\r\n    const id = getState().auth.id\r\n    const data = await profileApi.saveProfile(profile)\r\n    if (!data.resultCode) dispatch(getProfile(id))\r\n    else {\r\n        let message = data.messages.length ? data.messages[0] : 'Some error'\r\n        dispatch(stopSubmit('profileDataForm', {_error: message}))\r\n        return Promise.reject(message)\r\n    }\r\n}","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': 'a9b36abe-d689-4dc1-9b92-adeaba26d689'\r\n    }\r\n})\r\n\r\nexport const userApi = {\r\n    getUsers(currentPage, pageSize) {\r\n        return instance\r\n            .get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(res => res.data)\r\n    },\r\n    getUser(id) {\r\n        console.warn('Please use profileApi')\r\n        return profileApi.getProfile(id)\r\n    },\r\n    follow(id) {\r\n        return instance\r\n            .post(`follow/${id}`)\r\n            .then(res => res.data)\r\n    },\r\n    unfollow(id) {\r\n        return instance\r\n            .delete(`unfollow/${id}`)\r\n            .then(res => res.data)\r\n    }\r\n}\r\n\r\nexport const profileApi = {\r\n    getProfile(id) {\r\n        return instance\r\n            .get(`profile/${id}`)\r\n            .then(res => res.data)\r\n    },\r\n    getStatus(id) {\r\n        return instance\r\n            .get(`profile/status/${id}`)\r\n            .then(res => res.data)\r\n    },\r\n    updateStatus(status) {\r\n        return instance\r\n            .put(`profile/status`, {status})\r\n    },\r\n    saveAvatar(file) {\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        return instance\r\n            .put('profile/photo', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            })\r\n            .then(res => res.data)\r\n            .then(res => res.data)\r\n    },\r\n    saveProfile(profile) {\r\n        return instance\r\n            .put(`profile`, profile)\r\n            .then(res => res.data)\r\n    }\r\n}\r\n\r\nexport const authApi = {\r\n    me() {\r\n        return instance\r\n            .get(`auth/me`)\r\n            .then(res => res.data)\r\n    },\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return instance\r\n            .post('auth/login', {email, password, rememberMe, captcha})\r\n            .then(res => res.data)\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/login')\r\n    }\r\n}\r\n\r\nexport const securityApi = {\r\n    getCaptchaUrl() {\r\n        return instance\r\n            .get(`security/get-captcha-url`)\r\n            .then(res => res.data)\r\n    }\r\n}","const ADD_MESSAGE = 'ADD-MESSAGE'\r\nconst DELETE_MESSAGE = 'DELETE-MESSAGE'\r\n\r\nconst initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Mark'},\r\n        {id: 2, name: 'Alice'}\r\n    ],\r\n    messages: [\r\n        {id: 1, text: 'Hi'},\r\n        {id: 2, text: 'How are you?'}\r\n    ]\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messages: [\r\n                    ...state.messages,\r\n                    {id: 3, text: action.text}\r\n                ]\r\n            }\r\n        case DELETE_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messages: state.messages.filter(m => m.id !== action.id)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default dialogsReducer\r\n\r\nexport const addMessage = text => ({type: ADD_MESSAGE, text})\r\nexport const deleteMessage = id => ({type: DELETE_MESSAGE, id})","import {userApi} from '../api/api'\r\n\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT'\r\nconst SET_USERS = 'SET-USERS'\r\nconst TOGGLE_IS_FOLLOW = 'TOGGLE-IS-FOLLOW'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_IN_PROGRESS = 'TOGGLE-IS-FOLLOWING-IN-PROGRESS'\r\n\r\nconst initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalUsersCount\r\n            }\r\n        case SET_USERS:\r\n            return {...state, users: action.users}\r\n        case TOGGLE_IS_FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.id)\r\n                        return {...u, followed: !u.followed}\r\n                    return u\r\n                })\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case TOGGLE_IS_FOLLOWING_IN_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.followingInProgress\r\n                    ? [...state.followingInProgress, action.id]\r\n                    : state.followingInProgress.filter(id => id !== action.id)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default usersReducer\r\n\r\nexport const setCurrentPage = currentPage => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = totalUsersCount => ({\r\n    type: SET_TOTAL_USERS_COUNT, totalUsersCount\r\n})\r\nexport const setUsers = users => ({type: SET_USERS, users})\r\nexport const toggleIsFollowSuccess = id => ({type: TOGGLE_IS_FOLLOW, id})\r\nexport const toggleIsFetching = isFetching => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleIsFollowingInProgress = (followingInProgress, id) => ({\r\n    type: TOGGLE_IS_FOLLOWING_IN_PROGRESS,\r\n    followingInProgress, id\r\n})\r\n\r\nexport const requestUsers = (page, pageSize) => async dispatch => {\r\n    dispatch(toggleIsFetching(true))\r\n    dispatch(setCurrentPage(page))\r\n    const data = await userApi.getUsers(page, pageSize)\r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setUsers(data.items))\r\n    dispatch(setTotalUsersCount(data.totalCount))\r\n}\r\nconst followUnfollowFlow = async (dispatch, id, apiMethod) => {\r\n    dispatch(toggleIsFollowingInProgress(true, id))\r\n    const data = await apiMethod(id)\r\n    if (data.resultCode === 0) dispatch(toggleIsFollowSuccess(id))\r\n    dispatch(toggleIsFollowingInProgress(false, id))\r\n}\r\nexport const follow = id => dispatch =>\r\n    followUnfollowFlow(dispatch, id, userApi.follow.bind(userApi))\r\nexport const unfollow = id => dispatch =>\r\n    followUnfollowFlow(dispatch, id, userApi.unfollow.bind(userApi))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__cf_lA\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.65cb35c3.svg\";"],"sourceRoot":""}