{"version":3,"sources":["components/common/Forms/Forms.jsx","components/common/Forms/forms.module.css","utils/validators.js","components/Login/LoginForm/LoginForm.jsx","components/Login/Login.jsx"],"names":["Form","input","meta","touched","error","el","props","showError","className","s","React","createElement","Textarea","Input","createField","name","placeholder","validators","component","text","validate","module","exports","required","value","undefined","maxLength","max","length","minLength","min","minLengthEmail","minLengthPassword","LoginForm","handleSubmit","onSubmit","type","formError","LoginReduxForm","reduxForm","form","connect","state","isAuth","auth","login","logout","to","data","email","password","rememberMe"],"mappings":"sQAIMA,EAAO,SAAC,GAAmD,IAAlDC,EAAiD,EAAjDA,MAAiD,IAA1CC,KAAOC,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,MAAQC,EAAkB,EAAlBA,GAAOC,EAAW,qCACtDC,EAAYJ,GAAWC,EAE7B,OACI,yBAAKI,UAAS,UAAKC,OAAL,YAAeF,EAAYE,QAAU,KAC9CC,IAAMC,cAAcN,EAApB,2BAA4BJ,GAAUK,IACtCC,GAAa,+BAAQH,KAKrBQ,EAAW,SAAAN,GAAK,OAAI,kBAACN,EAAD,iBAAUM,EAAV,CAAiBD,GAAG,eACxCQ,EAAQ,SAAAP,GAAK,OAAI,kBAACN,EAAD,iBAAUM,EAAV,CAAiBD,GAAG,YAErCS,EAAc,SAACC,EAAMC,EAAaC,EAAYC,GAAhC,IAA2CZ,EAA3C,uDAAmD,GAAIa,EAAvD,uDAA8D,GAA9D,OACvB,oCACI,kBAAC,IAAD,eACIJ,KAAMA,EACNC,YAAaA,EACbI,SAAUH,EACVC,UAAWA,GACPZ,IANZ,IAOQa,K,oBCzBZE,EAAOC,QAAU,CAAC,KAAO,oBAAoB,MAAQ,qBAAqB,UAAY,2B,iCCDtF,sGAAO,IAAMC,EAAW,SAAAC,GAAK,OAAIA,OAAQC,EAAY,qBAExCC,EAAY,SAAAC,GAAG,OAAI,SAAAH,GAAK,OACjCA,GAASA,EAAMI,OAASD,EAAxB,0BAAiDA,QAAQF,IAEhDI,EAAY,SAAAC,GAAG,OAAI,SAAAN,GAAK,OACjCA,GAASA,EAAMI,OAASE,EAAxB,0BAAiDA,QAAQL,K,yGCDzDM,EAAiBF,YAAU,GAC3BG,EAAoBH,YAAU,GAenBI,EAbG,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,aAAc9B,EAAW,EAAXA,MAC9B,OAAO,0BAAM+B,SAAUD,GAClBpB,YAAY,QAAS,QAAS,CAACS,IAAUQ,GAAiBlB,KAC1DC,YAAY,WAAY,WACrB,CAACS,IAAUS,GAAoBnB,IAAO,CAACuB,KAAM,aAChDtB,YAAY,aAAc,KAAM,GAAID,IACjC,CAACuB,KAAM,YAAa,eACvBhC,GAAS,yBAAKI,UAAWC,IAAE4B,WAAYjC,GACxC,6BACI,4BAAQgC,KAAK,UAAb,a,uBCVNE,EAAiBC,YAAU,CAACC,KAAM,SAAjBD,CAA2BN,GAiBnCQ,uBAFS,SAAAC,GAAK,MAAK,CAACC,OAAQD,EAAME,KAAKD,UAEd,CACpCE,UAAOC,YADIL,EAfD,SAAAnC,GAGV,OAAIA,EAAMqC,OAAe,kBAAC,IAAD,CAAUI,GAAG,aAGlC,oCACI,qCACA,kBAACT,EAAD,CAAgBH,SAPP,SAAAa,GAAI,OAAI1C,EAAMuC,MAAMG,EAAKC,MAAOD,EAAKE,SAAUF,EAAKG","file":"static/js/7.522973cd.chunk.js","sourcesContent":["import React from 'react'\r\nimport * as s from './forms.module.css'\r\nimport {Field} from 'redux-form';\r\n\r\nconst Form = ({input, meta: {touched, error}, el, ...props}) => {\r\n    const showError = touched && error\r\n\r\n    return (\r\n        <div className={`${s.form} ${showError ? s.error : ''}`}>\r\n            {React.createElement(el, {...input, ...props})}\r\n            {showError && <small>{error}</small>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = props => <Form {...props} el='textarea'/>\r\nexport const Input = props => <Form {...props} el='input'/>\r\n\r\nexport const createField = (name, placeholder, validators, component, props = {}, text = '') => (\r\n    <>\r\n        <Field\r\n            name={name}\r\n            placeholder={placeholder}\r\n            validate={validators}\r\n            component={component}\r\n            {...props}\r\n        /> {text}\r\n    </>\r\n)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"forms_form__tHqmU\",\"error\":\"forms_error__2xJFm\",\"formError\":\"forms_formError__3e95j\"};","export const required = value => value ? undefined : 'Field is required'\r\n\r\nexport const maxLength = max => value =>\r\n    value && value.length > max ? `Max characters: ${max}` : undefined\r\n\r\nexport const minLength = min => value =>\r\n    value && value.length < min ? `Min characters: ${min}` : undefined","import React from 'react';\r\nimport {createField, Input} from '../../common/Forms/Forms';\r\nimport {minLength, required} from '../../../utils/validators';\r\nimport s from '../../common/Forms/forms.module.css'\r\n\r\nlet minLengthEmail = minLength(3)\r\nlet minLengthPassword = minLength(8)\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        {createField('email', 'Email', [required, minLengthEmail], Input)}\r\n        {createField('password', 'Password',\r\n            [required, minLengthPassword], Input, {type: 'password'})}\r\n        {createField('rememberMe', null, [], Input,\r\n            {type: 'checkbox'}, 'remember me')}\r\n        {error && <div className={s.formError}>{error}</div>}\r\n        <div>\r\n            <button type='submit'>Submit</button>\r\n        </div>\r\n    </form>\r\n}\r\nexport default LoginForm","import React from 'react';\r\nimport {reduxForm} from 'redux-form'\r\nimport LoginForm from './LoginForm/LoginForm';\r\nimport {connect} from 'react-redux';\r\nimport {login, logout} from '../../redux/authReducer';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = props => {\r\n    const onSubmit = data => props.login(data.email, data.password, data.rememberMe)\r\n\r\n    if (props.isAuth) return <Redirect to='/profile'/>\r\n\r\n    return (\r\n        <>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({isAuth: state.auth.isAuth})\r\n\r\nexport default connect(mapStateToProps, {\r\n    login, logout\r\n})(Login)"],"sourceRoot":""}